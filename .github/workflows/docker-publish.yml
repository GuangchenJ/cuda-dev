name: Docker Deploy

on:
  push:
    tags:  [ '*.*.*' ]

env:
  IMAGE_NAME: cuda11-cudnn8-trt8-devel-ubuntu20.04

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: set-matrix
        run: |
          JSON=$(cat .github/workflows/repo-setting.json | tr '\n' ' ' | sed 's/ //g')
          echo "::set-output name=matrix::$JSON"

  build:
    runs-on: ubuntu-latest
    needs: [ set-matrix ]
    strategy:
      matrix: ${{fromJSON(needs.set-matrix.outputs.matrix)}}

    env:
      id: ${{ secrets[matrix.id] }}
      token: ${{ secrets[matrix.token] }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Git Tag
        id: git_tag
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          echo "::set-output name=tag::$tag"

      - name: Log into registry ${{ matrix.name }}
        uses: docker/login-action@v1
        with:
          registry: ${{ matrix.register }}
          username: ${{ env.id }}
          password: ${{ env.token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.push_link }}/${{ env.IMAGE_NAME }}

      - name: Build and push ${{ matrix.name }}
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
